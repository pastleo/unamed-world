import WS from 'libp2p-websockets';
import filters from 'libp2p-websockets/src/filters.js';

// export const IPFS_OPTIONS = {} // using ipfs default config
export const IPFS_OPTIONS = {
  config: {
    Bootstrap: [
      '/ip4/127.0.0.1/tcp/4005/ws/p2p/12D3KooWMg1RMxFkAGGEW9RS66M4sCqz8BePeXMVwTPBjw4oBjR2',

      // default nodes:
      //'/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',
      //'/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',
      //'/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',
      //'/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',
      //'/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',
      //'/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',
      //'/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',
      //'/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS',
      //'/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN'
    ],
    Addresses: {
      Delegates: [
        '/ip4/127.0.0.1/tcp/8081/http',
        // default ipfs delegates:
        //'/dns4/node0.delegate.ipfs.io/tcp/443/https',
        //'/dns4/node1.delegate.ipfs.io/tcp/443/https',
        //'/dns4/node2.delegate.ipfs.io/tcp/443/https',
        //'/dns4/node3.delegate.ipfs.io/tcp/443/https'
      ]
    },
  },
  preload: { addresses: [
    '/ip4/127.0.0.1/tcp/8081/http',

    // default ipfs preload gateways:
    //'/dns4/node0.preload.ipfs.io/https',
    //'/dns4/node1.preload.ipfs.io/https',
    //'/dns4/node2.preload.ipfs.io/https',
    //'/dns4/node3.preload.ipfs.io/https'
  ] },
  libp2p: {
    config: {
      transport: {
        // In a production environment the default filter should be used
        // where only DNS + WSS addresses will be dialed by websockets in the browser.
        [WS.prototype[Symbol.toStringTag]]: { filter: filters.all }
      }
    }
  },
}

export const UNAMED_NETWORK_CONFIG = {
  iceServers: [{ urls: 'stun:stun.l.google.com:19302' }, { urls: 'stun:global.stun.twilio.com:3478?transport=udp' }],
}
export const UNAMED_NETWORK_KNOWN_SERVICE_ADDRS = [
  '/ip4/127.0.0.1/tcp/3001/ws/p2p/12D3KooWMg1RMxFkAGGEW9RS66M4sCqz8BePeXMVwTPBjw4oBjR2',
  //'/ip4/127.0.0.1/tcp/3002/ws/p2p/12D3KooWHajH8D6sfgydW1S9QuboeViFUKArn4vqXEJuT1dVZdT9',
  //'/ip4/127.0.0.1/tcp/3003/ws/p2p/12D3KooWAXaKe9rZLujsSzQHCcfmVpeo78vi7Du2jizCkgnm3xnP',
]
